							*:pw* *:pwd* *E187*
:pw[d]			打印当前目录名称。
			另请参阅 |getcwd()|。
							*:pwd-verbose*
			当 'verbose' 非零时，|:pwd| 还将显示当前目录的设置作用域。示例：>

				" 由 :cd 设置
				:verbose pwd
				[global] /path/to/current

				" 由 :lcd 设置
				:verbose pwd
				[window] /path/to/current

				" 由 :tcd 设置
				:verbose pwd
				[tabpage] /path/to/current

只要没有使用 |:lcd| 或 |:tcd| 命令，所有窗口共享相同的当前目录。使用命令跳转到另一个窗口不会更改当前目录的任何内容。

当对窗口使用了 |:lcd| 时，指定的目录成为该窗口的当前目录。未使用 |:lcd| 命令的窗口坚持使用全局或标签页本地目录。当跳转到另一个窗口时，当前目录更改为最后指定的本地当前目录。如果未指定，则使用全局或标签页本地目录。当创建新窗口时，它继承当前窗口的本地目录。

更改标签页时应用相同的行为。如果当前标签页没有本地工作目录，则使用全局工作目录。

当使用 |:cd| 命令时，当前窗口和标签页将丢失其本地当前目录，并从此使用全局当前目录。当使用 |:tcd| 命令时，仅当前窗口将丢失其本地工作目录。

使用 |:cd| 后，完整路径名将用于读取和写入文件。在某些网络文件系统上，这可能会导致问题。使用完整路径名的结果是，当前使用的文件名将保持引用同一文件。示例：如果你有一个文件 a:test 和一个目录 a:vim，命令 ":e test" ":cd vim" ":w" 将覆盖文件 a:test 而不是写入 a:vim/test。但是如果你执行 ":w test"，文件 a:vim/test 将被写入，因为你给出了一个新文件名并且没有引用 ":cd" 之前的文件名。


vim:tw=78:ts=8:noet:ft=help:norl:
