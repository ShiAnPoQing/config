*usr_06.txt*	Nvim

		     VIM 用户手册 - by Bram Moolenaar

			      使用语法高亮


黑白文本很无聊。使用颜色能让您的文件变得生动。这不仅看起来漂亮，还能加快您的工作速度。更改用于不同文本类型的颜色。打印您的文本，并带有您在屏幕上看到的颜色。

|06.1|	开启语法高亮
|06.2|	没有颜色或颜色错误？
|06.3|	不同的颜色
|06.4|	使用颜色或不用颜色
|06.5|	进一步阅读

     下一章: |usr_07.txt|  编辑多个文件
 上一章: |usr_05.txt|  设置您的设置
目录: |usr_toc.txt|

==============================================================================
*06.1*	开启语法高亮

语法高亮默认是启用的。Nvim 会自动检测文件的类型并加载正确的语法高亮。

==============================================================================
*06.2*	没有颜色或颜色错误？

您看不到颜色可能有几个原因：

- 您的终端不支持颜色。
	Vim 将使用粗体、斜体和下划线文本，但这看起来不太美观。您可能想尝试使用支持颜色的终端。

- 您的终端确实支持颜色，但 Vim 不知道这一点。
	请确保您的 $TERM 设置正确。例如，当使用支持颜色的 xterm 时： >

		setenv TERM xterm-color
<
	或者（取决于您的 shell）： >

		TERM=xterm-color; export TERM

<	终端名称必须与您正在使用的终端匹配。

- 文件类型未被识别。
	Vim 并不了解所有文件类型，有时几乎无法判断文件使用何种语言。尝试此命令： >

		:set filetype
<
	如果结果是 "filetype="，那么问题确实是 Vim 不知道这是什么类型的文件。您可以手动设置类型： >

		:set filetype=fortran

<	要查看哪些类型可用，请查看目录 $VIMRUNTIME/syntax。在 GUI 中，您可以使用 Syntax 菜单。
	设置文件类型也可以使用 |modeline| 完成，这样每次编辑文件时都会进行高亮。例如，这行可以用于 Makefile 中（将其放在文件的开头或结尾附近）： >

		# vim: syntax=make

<	您可能知道如何自己检测文件类型。通常可以使用文件名的扩展名（点之后的部分）。
	有关如何告诉 Vim 检测该文件类型的信息，请参阅 |new-filetype|。

- 您的文件类型没有高亮。
	您可以尝试通过手动设置如上所述使用类似的文件类型。如果这还不够好，您可以编写自己的语法文件，请参阅 |mysyntaxfile|。


或者颜色可能是错误的：

- 彩色文本非常难以阅读。
	Vim 会猜测您正在使用的背景颜色。如果是黑色（或其他深色），它将使用浅色文本。如果是白色（或其他浅色），它将使用深色文本。如果 Vim 猜错了，文本将难以阅读。要解决此问题，请设置 'background' 选项。对于深色背景： >

		:set background=dark

<	对于浅色背景： >

		:set background=light

<	确保将此命令放在 ":syntax enable" 命令 _之前_，否则颜色将已经被设置。您可以在设置 'background' 后执行 ":syntax reset"，让 Vim 再次设置默认颜色。

- 从底部向上滚动时颜色错误。
	Vim 不会读取整个文件来解析文本。它从您查看文件的任何位置开始解析。这节省了大量时间，但有时颜色会出错。一个简单的解决方法是按 CTRL-L。或者稍微向后滚动然后再向前滚动。
	要真正修复，请参阅 |:syn-sync|。一些语法文件有办法让它查看更远的位置，请参阅特定语法文件的帮助。例如，TeX 语法的 |ft-tex-syntax|。

==============================================================================
*06.3*	不同的颜色				*:syn-default-override*

如果您不喜欢默认颜色，可以选择另一个配色方案。在 GUI 中，使用 Edit/Color Scheme 菜单。您也可以键入命令： >

	:colorscheme evening

"evening" 是配色方案的名称。还有其他几个您可能想尝试的。查看目录 $VIMRUNTIME/colors。

当您找到喜欢的配色方案后，将 ":colorscheme" 命令添加到您的 |init.vim| 文件中。

您也可以编写自己的配色方案。方法如下：

1. 选择一个接近的配色方案。将此文件复制到您自己的 Vim 目录。对于 Unix，这应该可行： >

	!mkdir -p ~/.config/nvim/colors
	!cp $VIMRUNTIME/colors/morning.vim ~/.config/nvim/colors/mine.vim
<
   这是从 Vim 内部完成的，因为它知道 $VIMRUNTIME 的值。

2. 编辑配色方案文件。这些条目很有用：

	cterm		彩色终端中的属性
	ctermfg		彩色终端中的前景色
	ctermbg		彩色终端中的背景色
	gui		GUI 中的属性
	guifg		GUI 中的前景色
	guibg		GUI 中的背景色

   例如，要使注释变为绿色： >

	:highlight Comment ctermfg=green guifg=green
<
   可用于 "cterm" 和 "gui" 的属性是 "bold" 和 "underline"。如果两者都要，使用 "bold,underline"。有关详细信息，请参阅 |:highlight| 命令。

3. 告诉 Vim 始终使用您的配色方案。将这一行放入您的 |vimrc| 中： >

	colorscheme mine

如果您想查看最常用的颜色组合是什么样子，请使用此命令： >

	:runtime syntax/colortest.vim

您将看到各种颜色组合的文本。您可以检查哪些是可读且美观的。

==============================================================================
*06.4*	使用颜色或不用颜色

以彩色显示文本需要大量努力。如果您发现显示速度太慢，您可能想暂时禁用语法高亮： >

	:syntax clear

当编辑另一个文件（或同一个文件）时，颜色会恢复。

如果您想完全停止高亮，请使用： >

	:syntax off

这将完全禁用语法高亮，并立即为所有缓冲区移除它。有关更多详细信息，请参阅 |:syntax-off|。

							*:syn-manual*
如果您只想对特定文件进行语法高亮，请使用： >

	:syntax manual

这将启用语法高亮功能，但在开始编辑缓冲区时不会自动开启。要为当前缓冲区开启高亮，请设置 'syntax' 选项： >

	:set syntax=ON
<
==============================================================================
*06.5*	进一步阅读

|usr_44.txt|  您自己的语法高亮。
|syntax|      所有细节。

==============================================================================

下一章: |usr_07.txt|  编辑多个文件

版权: 见 |manual-copyright|  vim:tw=78:ts=8:noet:ft=help:norl:
