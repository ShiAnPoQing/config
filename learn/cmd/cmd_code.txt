*Code*
|:break|	:brea[k]	跳出while循环
|:call|		:cal[l]		调用函数
|:catch|	:cat[ch]	:try命令的一部分
|:const|	:cons[t]	将变量创建为常量
|:continue|	:con[tinue]	返回到:while
|:elseif|	:elsei[f]	:if命令的一部分
|:else|		:el[se]		:if命令的一部分
|:endfor|	:endfo[r]	结束之前的:for
|:endfunction|	:endf[unction]	结束以:function开始的用户函数
|:endif|	:en[dif]	结束之前的:if
|:endtry|	:endt[ry]	结束之前的:try
|:endwhile|	:endw[hile]	结束之前的:while
|:finally|	:fina[lly]	:try命令的一部分
|:for|		:for		for循环
|:if|		:if		当条件满足时执行命令
|:lockvar|	:lockv[ar]	锁定变量
|:throw|	:th[row]	抛出异常
|:try|		:try		执行命令，出错或异常时中止
|:unlet|	:unl[et]	删除变量
|:unlockvar|	:unlo[ckvar]	解锁变量
|:while|	:wh[ile]	只要条件满足就执行循环
|:return|	:retu[rn]	从用户函数返回
|:function|	:fu[nction]	定义用户函数

vim:tw=78:ts=8:noet:ft=help:norl:
